variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  SPRING_CONFIG_MAP: spring-configmap-$CI_PIPELINE_IID
  FILEBEAT_CONFIG_MAP: filebeat-config-$CI_PIPELINE_IID
  DOCKER_PULL_SECRET: pride-gitlab-docker-secret
  IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA

#include:
#  - template: Container-Scanning.gitlab-ci.yml
#  - template: Dependency-Scanning.gitlab-ci.yml
#  - template: License-Management.gitlab-ci.yml

docker_build:
  image: docker:18.09
  stage: build
  services:
    - docker:18.09-dind
  script:
    - apk add --update bash gettext tzdata coreutils
    - docker info
    - docker build -t $IMAGE .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $IMAGE

kube_deploy_prod_hh:
  environment: prod-k8s-hh
  extends: .kube_deploy_script

kube_deploy_prod_hx:
  environment: prod-k8s-hx
  extends: .kube_deploy_script

.kube_deploy_script:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - apk add --update bash gettext tzdata coreutils
    - export HOSTNAME_BCKUP=$HOSTNAME && export HOSTNAME='${HOSTNAME}'
    - envsubst < config/.application.yml > config/application.yml
#    - envsubst < .filebeat.yml > filebeat.yml
    - export HOSTNAME=$HOSTNAME_BCKUP
    - mkdir -p ~/.kube
    - echo $KUBE_CONFIG > kubeconfig
    - base64 -d kubeconfig > ~/.kube/config
    - kubectl config get-contexts
    - kubectl create namespace $k8s_namespace || true
    - kubectl -n $k8s_namespace delete secret $DOCKER_PULL_SECRET || true
    - kubectl -n $k8s_namespace create secret docker-registry $DOCKER_PULL_SECRET --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD
# create configmap for first time
    - kubectl -n $k8s_namespace create configmap $SPRING_CONFIG_MAP --from-file=config/application.yml || true
# replace configmap if it already exists
    - kubectl -n $k8s_namespace create configmap $SPRING_CONFIG_MAP --from-file=config/application.yml -o yaml --dry-run | kubectl replace -f -
# create configmap for first time
#    - kubectl -n $k8s_namespace create configmap $FILEBEAT_CONFIG_MAP --from-file=filebeat.yml || true
# replace configmap if it already exists
#    - kubectl -n $k8s_namespace create configmap $FILEBEAT_CONFIG_MAP --from-file=filebeat.yml -o yaml --dry-run | kubectl replace -f -
    - envsubst < .kubernetes.yml > kubernetes.yml
    - cat kubernetes.yml
    - kubectl -n $k8s_namespace apply -f kubernetes.yml
  when: manual